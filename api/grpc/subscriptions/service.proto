syntax = "proto3";

package awakari.subscriptions;

option go_package = "./api/grpc/subscriptions";

service Service {

  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Read(ReadRequest) returns (ReadResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc SearchOwn(SearchOwnRequest) returns (SearchOwnResponse);
}

// Create

message CreateRequest {
  string description = 1;
  bool enabled = 2;
  ConditionInput cond = 3;
}

// ConditionInput represents the Subscription routing Condition data that is immutable once Subscription is created.
message ConditionInput {
  bool not = 1;
  oneof cond {
    GroupConditionInput gc = 2;
    TextConditionInput tc = 3;
  }
}

message GroupConditionInput {
  GroupLogic logic = 1;
  repeated ConditionInput group = 2;
}

enum GroupLogic {
  And = 0;
  Or = 1;
  Xor = 2;
}

message TextConditionInput {
  string key = 1;
  string term = 2;
  bool exact = 3;
}

message CreateResponse {
  string id = 1;
}

// Read

message ReadRequest {
  string id = 1;
}

message ReadResponse {
  string description = 1;
  bool enabled = 2;
  ConditionOutput cond = 3;
}

message ConditionOutput {
  bool not = 1;
  oneof cond {
    GroupConditionOutput gc = 2;
    TextConditionOutput tc = 3;
  }
}

message GroupConditionOutput {
  GroupLogic logic = 1;
  repeated ConditionOutput group = 2;
}

message TextConditionOutput {
  string id = 1;
  string key = 2;
  string term = 3;
  bool exact = 4;
}

// Update

message UpdateRequest {
  string id = 1;
  string description = 2;
  bool enabled = 3;
}

message UpdateResponse {
}

// Delete

message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
}

// SearchOwn

message SearchOwnRequest {
  string cursor = 1;
  uint32 limit = 2;
}

message SearchOwnResponse {
  repeated string ids = 1;
}
